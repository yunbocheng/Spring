<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>

  <servlet>
    <servlet-name>RegisterServlet</servlet-name>
    <servlet-class>com.yunbocheng.collection.RegisterServlet</servlet-class>
  </servlet>

  <servlet-mapping>
    <servlet-name>RegisterServlet</servlet-name>
    <url-pattern>/reg</url-pattern>
  </servlet-mapping>

  <!--注册监听器
    配置监听器的目的：创建spring容器对象，创建了容器对象，基于能把spring.xml配置文件中的多有对象都创建好。
    用户发起请求就可以直接使用对象了。
    
    监听器被创建对象后，会读取/WEB-INF/spring.xml （并不是读取这个名字的文件，是spring的主配置文件）
    为什么要读取文件：因为监听器中要创建ApplicationContext对象，需要加载配置文件。
    /WEB-INF/spring.xml(spring主配置文件) 就是监听器默认读取的spring配置文件路径

    可以修改默认文件的路径：使用context-param重新指定文件路径位置
  -->
  <context-param>
    <!--
      contextConfigLocation ：表示配置文件的路径
    -->
    <!--自定义配置文件的路径-->
    <param-name>contextConfigLocation</param-name>
    <!--这个classpath就是 target/classes -->
    <param-value>classpath:applicationContext.xml</param-value>
  </context-param>
  <listener>
    <listener-class>org.springframework.web.context.ContextCleanupListener</listener-class>
  </listener>
</web-app>
